@page "/"
@inject IHttpContextAccessor HttpContextAccessor

<div class="inside">
    <div class="floater">
        <div class="content">
            <div class="wrap">
                <div>
                    <h2>Morty</h2>
                    <p>An assistant to <a style="display: inline-block" href="https://x.com/rickdotnet">rickdotnet</a></p>
                </div>
                @if (!string.IsNullOrWhiteSpace(userName))
                {
                    <div>
                        <p>You're logged in as @userName</p>
                    </div>
                }
                <footer>
                    <div>
                        <ul>
                            <li>
                                <a aria-label="x" target="_blank" href="https://x.com/mortydotbot">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 1200 1227">
                                        <path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"></path>
                                    </svg>
                                </a>
                            </li>
                        </ul>
                    </div>
                </footer>
            </div>
        </div>
    </div>
</div>

@code {
    private string? userName;
    private string? userId;

    protected override void OnInitialized()
    {
        // sue me, this isn't staying. It's for dev purposes
        var user = HttpContextAccessor.HttpContext?.User;
        if (user?.Identity == null)
            return;

        userName = user.Identity.Name;
        userId = user.FindFirst("sub")?.Value;
    }
}